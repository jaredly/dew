#!/bin/bash
# OH look what this became!
# I like brew, don't you? Lets write dew drops and have fun!

function debug() {
  if [[ ! -z $DEBUG && ! -z $1 ]]; then
    echo "$@"
  fi
  [[ ! -z $DEBUG ]]
}

function throw() {
  echo "$@" 1>&2
  exit 1
}

ROOT=$(dirname $(readlink -f $0))/..
debug "ROOT=$ROOT"

DROPS=$ROOT/drops
debug "DROPS=$DROPS"

DATA=$HOME/.docker-fu-data
debug "DATA=$DATA"
mkdir -p $DATA

SCOPES=$DATA/scopes
debug "SCOPES=$SCOPES"
mkdir -p $SCOPES


##
# First thing you must call
function SetContainerScope() {
  NAME=$1
  debug "NAME=$NAME"
  SCOPE=$SCOPES/$NAME
  debug "SCOPE=$SCOPE"
  mkdir -p $SCOPE
}

##
# Something on the index
function SetContainerImage() {
  IMAGE=$1
  debug "IMAGE=$IMAGE"
}

function TailContainerLogs() {
  sudo docker logs -f $1
}

##
# FIXME
# this is cool, but may be better to just grep the cli since we assume it is available
# otherwise do EVERYTHING via remote api :)
function ContainerRunning() {
  test $(echo -e "GET /containers/$1/json HTTP/1.0\r\n" | sudo nc -U /var/run/docker.sock | grep HTTP | awk '{ print $2 }') -eq 200
}

##
# If you don't use this we can't properly uninstall
function AnnounceVolume() {
  local vol=$SCOPE/volumes
  local name=$1
  local host_path=$2
  local container_path=$3
  mkdir -p $vol
  ln -sf $2 $vol/$1
  debug "volumes: `ls -lah $vol`"
}

##
# Set it with a heredoc
# TODO support setting one at a time too
function SetContainerEnv() {
  ENV_FILE=$SCOPE/env
  echo "" > $ENV_FILE
  while read line
  do
    array=( ${array[@]} $line )
    echo ${array[@]} >> $ENV_FILE
  done
  debug && cat $ENV_FILE
}

# sudo rm -rf /opt/gitlab/ ; docker rm -f gitlab ;  sudo rm -rf /opt/postgresql/data ; docker rm -f postgresql
function DestroyContainer() {
  for item in `ls $SCOPE`; do
    debug "Found item $item"
  done
}

function list() {
  ls $DROPS
}

function FindDrop() {
  local init=$DROPS/$name/init
  local alt_init=$DROPS/$name
  if [[ -f $init ]]; then
    $@
  elif [[ -f $alt_init ]]; then
    InstallDrop $name $alt_init
  else
    throw "No such formula $name"
  fi
}

function install() {
  local name=$2
  SetContainerScope $1 
  InstallDrop $name $init
}

function destroy() {
  echo "stub"
}

case "$1" in
  list | install | destroy )
    $1 $@
    ;;
  * )
    echo "Example usage: " >&2
    echo "  $(basename $0) list" >&2
    echo "  $(basename $0) install <name>" >&2
    echo "  $(basename $0) destroy <name>" >&2
    exit 1
esac

