#!/usr/bin/env node
var argv = require('minimist')(process.argv.slice(2)) 
  , path = require('path')
  , _ = require('lodash')
  , Dew = require('../index').Dew

var dew = new Dew({
  src: path.resolve(__dirname, '..')
});

if (argv._[0] === 'list-drops') {
  console.log("Listing drops");
  listDrops()
} else {
  var dropName = argv._[0];
  var action = argv._[1];
  var DewDrop = dew.drops[dropName];
  if (DewDrop) {
    var Drop = DewDrop(argv, dew);
    var drop = new Drop()
    if (action) {
      if (drop[action]) {
        drop[action](function (err, res) {
          if (err) throw err;
          if (res) console.log(res);
        });
      } else {
        console.log("Cannot '"+action+"' this drop");
      }
    } else {
      var attrs = Object.keys(drop.__proto__);
      console.log("Available commands: ");
      _.each(attrs, function (e) {
        if (_.isFunction(drop[e])) {
          console.log(" - "+e);
        }
      })
    }
  } else {
    if (dropName === "help" || argv.help) {
      help()
    } else if (dropName) {
      console.error('No drop \''+dropName+'\'. Available drops:');
      listDrops();
    } else {
      console.error("Missing argument <name>. Available drops:")
      listDrops()
    }
    process.exit(1);
  }
}

function help() {
  var pkg = require('../package.json');
  var _1 = path.basename(__filename);
  //var _0 = _.map(_1.split(''), function(){return ' '}).join('')
  console.log("Dew "+pkg.version+" ( "+pkg.repository.url+" ) ")
  console.log("Usage: ")
  console.log("  "+_1+" list-drops")
  console.log("  "+_1+" <drop-name> <action>")
};

function listDrops() {
  _.each(dew.drops, function (info, name) {
    console.log(" * "+name);
  });
}
